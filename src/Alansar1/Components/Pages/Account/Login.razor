@page "/login"
@page "/Account/Login"
@using Alansar1.Components.Layout
@layout Anoda
@using Alansar.Data
@using Alansar.Entities.Identity
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using System.Security.Claims
@inject SignInManager<User> SignInManager
@inject NavigationManager NavigationManager
@inject AppDbContext DbContext
@inject IHttpContextAccessor HttpContextAccessor
@rendermode InteractiveServer
@* 
<HeadOutlet>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"></script>
</HeadOutlet>
 *@

<!-- Bootstrap CDN -->
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"></script>
</head>

@if (loginFailed)
{
    <div class="alert alert-danger">Login failed. Please check your credentials.</div>
}
<div class="container h-100 d-flex align-items-center justify-content-center">
    <div class="row w-100">
        <div class="col-md-6 offset-md-3">
            <div class="card shadow-lg p-4">
                <div class="card-body">
                    <h2 class="text-center mb-4">Welcome Back</h2>
                    <p class="text-center mb-4">Please log in to continue to the Hostel Management System.</p>
                    <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin" FormName="loginForm">
                        <div class="form-group">
                            <label for="email" class="form-label">Email address</label>
                            <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
@*                             <label asp-for="Input.Email"></label>
                            <input asp-for="Input.Email" class="form-control" placeholder="Enter your email" />
                            <span asp-validation-for="Input.Email" class="text-danger"></span> *@
                        </div>
                        <div class="form-group">
                            <label for="password" class="form-label">Password</label>
                            <InputText id="password" class="form-control" @bind-Value="loginModel.Password" type="password" />
@*                             <label asp-for="Input.Password"></label>
                            <input asp-for="Input.Password" class="form-control" type="password" placeholder="Enter your password" />
                            <span asp-validation-for="Input.Password" class="text-danger"></span> *@
                        </div>
                        <div class="text-center">
                            <a href="/forgot-password" class="d-block mb-3">Forgot Password?</a>
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary btn-block">Login</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>


@* <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin" FormName="loginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="email" class="form-label">Email address</label>
        <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" class="form-control" @bind-Value="loginModel.Password" type="password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm> *@

@code {

    [SupplyParameterFromForm(FormName = "loginForm")]
    public LoginModel loginModel { get; set; }

    // private LoginModel loginModel = new LoginModel();
    protected override void OnInitialized() => loginModel ??= new();


    private bool loginFailed;

    private async Task HandleLogin()
    {
        // Check if user exists in the database
        var user = await DbContext.Users.SingleOrDefaultAsync(u => u.Email == loginModel.Email);
        if (user == null)
        {
            loginFailed = true;
            return;
        }

        // Attempt to log in using SignInManager
        var result = await SignInManager.PasswordSignInAsync(loginModel.Email, loginModel.Password, isPersistent: false, lockoutOnFailure: false);

        if (result.Succeeded)
        {
            var claims = new List<Claim>
            {
                new Claim(ClaimTypes.Name, user.UserName),
                new Claim("roleType", "admin")
            };

            var claimsIdentity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
            var principal = new ClaimsPrincipal(claimsIdentity);

            if (HttpContextAccessor.HttpContext != null)
            {
                await HttpContextAccessor.HttpContext.SignInAsync(CookieAuthenticationDefaults.AuthenticationScheme, principal);
            }
            NavigationManager.NavigateTo("/");
        }
        else
        {
            loginFailed = true;
        }
    }

    public class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}

<style>
    body {
        background-image: url('https://source.unsplash.com/featured/?office');
        background-size: cover;
        background-position: center;
        height: 100vh;
        width: 100%;
    }

    .card {
        background-color: rgba(255, 255, 255, 0.8); /* Add slight transparency to the card */
    }
</style>
