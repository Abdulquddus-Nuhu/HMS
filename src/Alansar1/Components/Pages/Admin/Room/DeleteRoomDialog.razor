@using Alansar.Entities
@inject HttpClient Http
@inject ISnackbar Snackbar

<MudDialog MaxWidth="MaxWidth.Medium" Class="pa-6">
    <DialogContent>
        <MudText Typo="Typo.h5" Class="mb-4">@ContentText</MudText>
        <MudText Typo="Typo.body1">Room Number: @Room.RoomNumber</MudText>
        <MudText Typo="Typo.body1">Type: @Room.Type</MudText>
        <MudText Typo="Typo.body1">Capacity: @Room.Capacity</MudText>
        <MudText Typo="Typo.body1">Price: @Room.Price.ToString("C")</MudText>
        <MudText Typo="Typo.body1">Is Available: @Room.IsAvailable</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Outlined">Cancel</MudButton>
        <MudButton Color="@Color" Variant="Variant.Filled" OnClick="Submit">@ButtonText</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public string ContentText { get; set; }

    [Parameter]
    public string ButtonText { get; set; }

    [Parameter]
    public Color Color { get; set; }

    [Parameter]
    public Room Room { get; set; }

    private async Task Submit()
    {
        Snackbar.Add("Room deleted successfully", Severity.Success);

        var response = await Http.DeleteAsync($"api/room/{Room.Id}");
        if (response.IsSuccessStatusCode)
        {
            Snackbar.Add("Room deleted successfully", Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Snackbar.Add("Failed to delete room", Severity.Error);
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
