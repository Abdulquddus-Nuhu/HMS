@* @using Microsoft.AspNetCore.Authorization
@attribute [Authorize] *@
@page "/admin-home"
@* @page "/" *@
@using Alansar.Client.Components.Layout
@layout AdminLayout
@inject HttpClient Http
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
@rendermode InteractiveAuto
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider


@* <PageTitle>Hostel Management System</PageTitle> *@
<PageTitle>HMS</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Welcome to the Hostel Management System!</MudText>
<MudText Class="mb-8">Manage your hostel efficiently with features like booking management, dining space reservations, and more.</MudText>

<MudGrid Class="mb-8">
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardContent>
                <MudText Typo="Typo.h6" Align="Align.Center">Number of Students</MudText>
                <MudText Typo="Typo.h4" Align="Align.Center">@numberOfStudents</MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardContent>
                <MudText Typo="Typo.h6" Align="Align.Center">Number of Dining Halls</MudText>
                <MudText Typo="Typo.h4" Align="Align.Center">@numberOfDiningHalls</MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardContent>
                <MudText Typo="Typo.h6" Align="Align.Center">Number of Rooms</MudText>
                <MudText Typo="Typo.h4" Align="Align.Center">@numberOfRooms</MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

<MudGrid>
    <MudItem xs="12" sm="6">
        <MudCard>
            <MudCardContent>
                <MudText Typo="Typo.h5">Manage Bookings</MudText>
                <MudText Typo="Typo.body2">Handle all room bookings and assignments seamlessly.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="booking">Go to Bookings</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="6">
        <MudCard>
            <MudCardContent>
                <MudText Typo="Typo.h5">Manage Dining Spaces</MudText>
                <MudText Typo="Typo.body2">Oversee dining space reservations and availability.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="dining">Go to Dining Spaces</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
</MudGrid>


<MudStack Row Class="justify-space-between mud-width-full">
    <MudStack Style="width: 300px">
        @foreach (var variant in Enum.GetValues(typeof(Variant)).Cast<Variant>())
        {
            <MudSelect @bind-Value="_value"
                       Variant="variant"
                       Label="@variant.ToString()"
                       Margin="_margin"
                       Dense="_dense"
                       Disabled="_disabled"
                       ReadOnly="_readonly"
                       Placeholder="@(_placeholder ? "Placeholder" : null)"
                       HelperText="@(_helperText ? "Helper Text" : null)"
                       HelperTextOnFocus="_helperTextOnFocus"
                       Clearable="_clearable">
                @foreach (var state in _states)
                {
                    <MudSelectItem Value="state">@state</MudSelectItem>
                }
            </MudSelect>
        }
    </MudStack>

</MudStack>


<MudSelect @bind-Value="_value"
           Variant="Variant.Outlined"
           Label="Classes"
           Margin="_margin"
           Dense="_dense"
           Disabled="_disabled"
           ReadOnly="_readonly"
           Placeholder="@(_placeholder ? "Placeholder" : null)"
           HelperText="@(_helperText ? "Helper Text" : null)"
           HelperTextOnFocus="_helperTextOnFocus"
           Clearable="_clearable">
    @foreach (var state in _states)
    {
        <MudSelectItem Value="state">@state</MudSelectItem>
    }
</MudSelect>



@code {
    string _value;
    Margin _margin;
    bool _dense;
    bool _disabled;
    bool _readonly;
    bool _placeholder;
    bool _helperText;
    bool _helperTextOnFocus;
    bool _clearable;

    private string[] _states =
    {
        "Alabama", "Alaska", "Arizona", "Arkansas", "California",
        "Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
        "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
        "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts",
        "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana",
        "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico",
        "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma",
        "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota",
        "Tennessee", "Texas", "Utah", "Vermont", "Virginia",
        "Washington", "West Virginia", "Wisconsin", "Wyoming"
    };
}

@code {
    private int numberOfStudents = 150;  
    private int numberOfDiningHalls = 5; 
    private int numberOfRooms = 50; 


    protected override async Task OnInitializedAsync()
    {

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;


        numberOfStudents = await Http.GetFromJsonAsync<int>("api/student/count");
        numberOfDiningHalls = await Http.GetFromJsonAsync<int>("api/diningspace/count");
        numberOfRooms = await Http.GetFromJsonAsync<int>("api/room/count");
    }
}
